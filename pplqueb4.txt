^M                                                                                                       |^M
;; Function main (main, funcdef_no=0, decl_uid=1499, cgraph_uid=1, symbol_order=0)^M                     |;; Function main (main, funcdef_no=0, decl_uid=1499, cgraph_uid=1, symbol_order=0)^M
^M                                                                                                       |^M
main ()^M                                                                                                |Iterations: 0^M
{^M                                                                                                      |main ()^M
  int c;^M                                                                                               |{^M
  int b;^M                                                                                               |  int c;^M
  int a;^M                                                                                               |  int b;^M
  int _1;^M                                                                                              |  int a;^M
  int _2;^M                                                                                              |  int _1;^M
  int _3;^M                                                                                              |  int _2;^M
  int _8;^M                                                                                              |  int _3;^M
^M                                                                                                       |  int _8;^M
  <bb 2> :^M                                                                                             |^M
  _1 = a_4(D) + c_5(D);                                                                                  |  <bb 2> :^M
  _2 = b_6(D) + _1;                                                                                      |  _1 = a_4(D) + c_5(D);
  _3 = c_5(D) + a_4(D);                                                                                  |  _2 = b_6(D) + _1;
  b_7 = _2 * _3;                                                                                         |  _3 = c_5(D) + a_4(D);
  _8 = b_7;                                                                                              |  b_7 = _2 * _3;
  return _8;                                                                                             |  _8 = b_7;
^M                                                                                                       |  return _8;
}^M                                                                                                      |^M
^M                                                                                                       |}^M
^M                                                                                                       |^M
~                                                                                                        |^M
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
~                                                                                                        |~                                                                                                       
B-4.c.019t.ssa                                                                                            B-4.c.025t.einline  


    Que 1 - How many  times is the expression  (a + c) computed  in the original
            code (as seen in the SSA pass)? What about after the FRE pass?


    Ans  - Twice, though the operands are in different orders. It is only computed once
           after the FRE pass.


    que 2 -  Have  there been  any more  optimizations  after FRE?  How will  you
             check?
             

     Ans -   We can check if there have been further optimisations by checking
             B-4.c.*.optimized, which is the final file after optimisation. It appears
             that redundant assignments have subsequently been eliminated   

    Que 3 -   Why did  we have  to put a  "return b" in  this assignment?  What if
              "return b" is changed to "return 0"? Will it make any difference?

    Ans -     Not returning b would result in its elimination as dead code, for example in
              the case where `return b` is changed to `return 0`.                                                                    