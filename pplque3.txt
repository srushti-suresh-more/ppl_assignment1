                                                                                                         |^M
        int main()                                                                                       |;; Function main (main, funcdef_no=0, decl_uid=1499, cgraph_uid=1, symbol_order=0)^M
        {                                                                                                |^M
            int sum = 0;                                                                                 |;; 4 loops found^M
            int i, j;                                                                                    |;;^M
                                                                                                         |;; Loop 0^M
            while(sum < 100) {                                                                           |;;  header 0, latch 1^M
                    sum = sum * 2;                                                                       |;;  depth 0, outer -1^M
            }                                                                                            |;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12^M
                                                                                                         |;;^M
            for(i=0; i<25; i++) {                                                                        |;; Loop 2^M
                    for(j=0; j<50; j++) {                                                                |;;  header 10, latch 9^M
                            sum = sum + i*j;                                                             |;;  depth 1, outer 0^M
                    }                                                                                    |;;  nodes: 10 9 8 6 7^M
            }                                                                                            |;;^M
        }                                                                                                |;; Loop 3^M
~                                                                                                        |;;  header 8, latch 7^M
~                                                                                                        |;;  depth 2, outer 2^M
~                                                                                                        |;;  nodes: 8 7^M
~                                                                                                        |;;^M
~                                                                                                        |;; Loop 1^M
~                                                                                                        |;;  header 4, latch 3^M
~                                                                                                        |;;  depth 1, outer 0^M
~                                                                                                        |;;  nodes: 4 3^M
~                                                                                                        |;; 2 succs { 4 }^M
~                                                                                                        |;; 3 succs { 4 }^M
~                                                                                                        |;; 4 succs { 3 5 }^M
~                                                                                                        |;; 5 succs { 10 }^M
~                                                                                                        |;; 6 succs { 8 }^M
~                                                                                                        |;; 7 succs { 8 }^M
~                                                                                                        |;; 8 succs { 7 9 }^M
~                                                                                                        |;; 9 succs { 10 }^M
~                                                                                                        |;; 10 succs { 6 11 }^M
~                                                                                                        |;; 11 succs { 12 }^M
~                                                                                                        |;; 12 succs { 1 }^M
~                                                                                                        |main ()^M
~                                                                                                        |{^M
~                                                                                                        |  int j;^M
~                                                                                                        |  int i;^M
~                                                                                                        |  int sum;^M
~                                                                                                        |  int D.1514;^M
~                                                                                                        |^M
~                                                                                                        |  <bb 2> :^M
~                                                                                                        |  sum = 0;
~                                                                                                        |  goto <bb 4>; [INV]
~                                                                                                        |^M
~                                                                                                        |  <bb 3> :^M
~                                                                                                        |  sum = sum * 2;
~                                                                                                        |^M
~                                                                                                        |  <bb 4> :^M
~                                                                                                        |  if (sum <= 99)
~                                                                                                        |    goto <bb 3>; [INV]
~                                                                                                        |  else
~                                                                                                        |    goto <bb 5>; [INV]
~                                                                                                        |^M
~                                                                                                        |  <bb 5> :^M
A-3.c                                                                                                     A-3.c.012t.cfg      







        Que   1   Identify the basic blocks that correspond  to the while loop. How is
                  the GIMPLE for a while loop different from simple if-else jumps?
        Ans - Block no. 3 and 4 belongs to while loop.BB2 avoids iteration by using goto BB4 command.it's unconditional control statement unlike if-else which are mostly conditional.


       Que    2   Identify the  basic blocks  for the nested  for-loop. You  should be
                  able  to identify  intializers, conditions  and increments  for each
                  loop as  well as  the shared  inner body.  Is there  really anything
                  special about a for-loop as compared to a while-loop?
    

        Ans -     2. BB 5:  Outer loop induction variable initialisation
                     BB 10: Outer loop conditional check
                     BB 6:  Inner loop induction variable initialisation
                     BB 8:  Inner loop conditional check
                     BB 7:  Inner loop body + induction variable increment
                     BB 9:  Outer loop induction variable increment

                                                                                    